#!/bin/bash

PYKUBE=
for pykube in $ /root/hroot/htools/pykube /root/htools/pykube
do
    if test -e "$pykube";then
        PYKUBE=$pykube
        break
    fi
done


_k_do() {
    $PYKUBE "$@"
}
_k_scale() {
    local kind="$1"
    local object="$2"
    local num="${3:-0}"
    shift
    shift
    shift
    _k_do scale "$kind" "$object" --replicas="$num" "$@"
}


if test -n "$PYKUBE";then

## get 
alias kg="_k_do get"
alias kgp="_k_do get pod"
alias kgs="_k_do get svc"
alias kgd="_k_do get deployment"
alias kgn="_k_do get node"
alias kgi="_k_do get ingress"
alias kgr="_k_do get release"
alias kgc="_k_do get configmap"
alias kgnw="_k_do get net-attach-def"
alias kga="_k_do get all"

## describe
alias kd="_k_do describe"
alias kdp="_k_do describe pod"
alias kds="_k_do describe svc"
alias kdd="_k_do describe deployment"
alias kdn="_k_do describe node"
alias kdi="_k_do describe ingress"
alias kdr="_k_do describe release"
alias kdc="_k_do describe configmap"
alias kdnw="_k_do describe net-attach-def"
alias kda="_k_do describe all"

## delete
alias kdd-="_k_do delete"
alias kddp="_k_do delete pod"
alias kdds="_k_do delete svc"
alias kddd="_k_do delete deployment"
alias kddi="_k_do delete ingress"
alias kddr="_k_do delete release"

## edit
alias ke="_k_do edit"
alias kep="_k_do edit pod"
alias kes="_k_do edit svc"
alias ked="_k_do edit deployment"
alias kei="_k_do edit ingress"
alias ker="_k_do edit release"
alias kenw="_k_do edit net-attach-def"
alias kec="_k_do edit configmap"

## log
alias klp="_k_do logs pod"

alias kx="_k_do exec pod"
alias kfa="kubectl apply -f"
alias kfc="kubectl create -f"
alias kfd="kubectl delete -f"
alias kfp="kubectl patch -f"

## kubectl -n kube-system
alias ks="kubectl -n kube-system"
alias ksd="_k_scale deployment"
fi
